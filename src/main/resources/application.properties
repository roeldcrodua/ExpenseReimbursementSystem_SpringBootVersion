server.port=9000

#spring.datasource.url=jdbc:postgresql://${PostgresDb_Url}/ers_springboot
#spring.datasource.username=${PostgresDb_Username}
#spring.datasource.password=${PostgresDb_Password}
#spring.datasource.url=jdbc:postgresql://revaturedatabase.cwf44nm8hyuv.us-east-2.rds.amazonaws.com/ers_springboot
#spring.datasource.url=jdbc:postgresql://ers-project.postgres.database.azure.com:5432/ers_db?user=postgres@ers-project&password=p4ssw0rd!&sslmode=require
#spring.datasource.username=postgres
#spring.datasource.password=p4ssw0rd
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL82Dialect

#JPA Configuration (We still need an orm. in our case we are using hibernate)
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.temp.user_jdbc_metadata_defaults=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#Profile configuration
spring.profiles.active=dev,test

management.endpoints.web.exposure.include=*
management.endpoints.web.exposure.exclude=env 

logging.level.root=debug
logging.level.org.hibernate=debug
logging.level.org.apache: debug
logging.file.path=/src/main/resources/spring.log
spring.mvc.log-request-details=true

## H2 database
spring.datasource.url=jdbc:h2:file:./h2testing/h2file
spring.datasource.username=sa
spring.datasource.password=sa
spring.datasource.driver-class-name=org.h2.Driver
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect